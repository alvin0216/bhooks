(self["webpackChunkx_rhooks"]=self["webpackChunkx_rhooks"]||[]).push([[518],{1422:function(e){"use strict";e.exports={}},8090:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return k}});var o=n(3761),s="import React from 'react';\nimport { useLocalStorageState } from 'x-rhooks';\n\nexport default function () {\n  const [message, setMessage] = useLocalStorageState('user-message', 'Hello~');\n  return (\n    <>\n      <input\n        value={message || ''}\n        placeholder=\"Please enter some words...\"\n        onChange={(e) => setMessage(e.target.value)}\n      />\n      <button style={{ margin: '0 8px' }} type=\"button\" onClick={() => setMessage('Hello~')}>\n        Reset\n      </button>\n      <button type=\"button\" onClick={() => setMessage()}>\n        Clear\n      </button>\n    </>\n  );\n}",a="import React from 'react';\nimport { useLocalStorageState } from 'x-rhooks';\n\nconst defaultArray = ['a', 'e', 'i', 'o', 'u'];\n\nexport default function () {\n  const [value, setValue] = useLocalStorageState('cascader', defaultArray);\n\n  return (\n    <>\n      <p>{value.join('-')}</p>\n      <button\n        type=\"button\"\n        style={{ marginRight: '16px' }}\n        onClick={() => setValue([...value, Math.random().toString(36).slice(-1)])}\n      >\n        push random\n      </button>\n      <button type=\"button\" onClick={() => setValue(defaultArray)}>\n        reset\n      </button>\n    </>\n  );\n}",r="import React from 'react';\nimport { useLocalStorageState } from 'x-rhooks';\n\ninterface IUser {\n  id: number;\n  name: string;\n  age: number;\n}\n\nexport default function () {\n  const [user, setUser] = useLocalStorageState('user', {\n    id: 9234634791,\n    name: 'Zhangsan',\n    age: 33,\n  } as IUser);\n\n  return (\n    <>\n      <input\n        style={{ width: 200 }}\n        defaultValue={user.name}\n        placeholder=\"input user name\"\n        onChange={(e) => {\n          setUser((u: IUser) => ({ ...u, name: e.target.value }));\n        }}\n      />\n    </>\n  );\n}",i="import { Button, Modal } from 'antd';\nimport React from 'react';\nimport { useModal } from 'x-rhooks';\n\nexport default () => {\n  const { modalProps, show } = useModal();\n  return (\n    <>\n      <Button onClick={show}>show</Button>\n      <Modal {...modalProps} title=\"xxx\">\n        Test\n      </Modal>\n    </>\n  );\n};",u="import { Button, Modal } from 'antd';\nimport React, { useCallback, useState } from 'react';\n/**\n * title: Default usage\n *\n * title.zh-CN: \u8bbe\u7f6e modelState \u53d8\u91cf\n */\nimport { useModal } from 'x-rhooks';\n\ninterface Info {\n  age: number;\n}\n\nexport default () => {\n  const { modalProps, show, modalState, setModalState } = useModal<Info>();\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          setModalState({ age: 18 });\n          show();\n        }}\n      >\n        show\n      </Button>\n      <Modal {...modalProps} title=\"xxx\">\n        {JSON.stringify(modalState, null, 2)}\n      </Modal>\n    </>\n  );\n};",d="import React, { useState } from 'react';\nimport { useMountState } from 'x-rhooks';\n\nexport default () => {\n  const { state, loading, error, setState, refresh } = useMountState(\n    { name: 'default', age: 100 },\n    async (set) => {\n      const data = await queryUserInfo();\n      set(data);\n    },\n  );\n\n  if (error) return 'error';\n  if (loading) return 'loading....';\n  return (\n    <>\n      <h4> name: {state.name}</h4>\n      <h4> age: {state.age}</h4>\n      <button onClick={() => setState((prev) => ({ ...prev, age: prev.age + 1 }))}>add age</button>\n      <button onClick={refresh}>refresh</button>\n    </>\n  );\n};\n\ninterface UserInfo {\n  name: string;\n  age: number;\n}\n\nfunction queryUserInfo(): Promise<UserInfo> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({ name: 'alvin', age: 18 });\n    }, 1000);\n  });\n}",l="import React, { useState } from 'react';\n\nimport useSafeState from '../index';\n\nconst Child = () => {\n  const [value, setValue] = useSafeState<string>();\n  React.useEffect(() => {\n    setTimeout(() => {\n      setValue('\u4ece\u670d\u52a1\u7aef\u83b7\u53d6\u7684\u6570\u636e');\n    }, 5000);\n  }, []);\n\n  const text = value || '\u6b63\u5728\u83b7\u53d6\u6570\u636e\u3002\u3002\u3002';\n\n  return <div>{text}</div>;\n};\n\nexport default () => {\n  const [visible, setVisible] = useSafeState(true);\n\n  return (\n    <div>\n      <button onClick={() => setVisible(false)}>\u5378\u8f7d</button>\n      {visible && <Child />}\n    </div>\n  );\n};",c="import React, { Dispatch, SetStateAction } from 'react';\n\nimport useUnmountedRef from '../useUnmountedRef';\n\nfunction useSafeState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>];\n\nfunction useSafeState<S = undefined>(): [S | undefined, Dispatch<SetStateAction<S | undefined>>];\n\nfunction useSafeState(initialState?) {\n  const unmountedRef = useUnmountedRef();\n  const [state, setState] = React.useState(initialState);\n  const setCurrentState = React.useCallback((currentState) => {\n    /** \u5982\u679c\u7ec4\u4ef6\u5df2\u7ecf\u5378\u8f7d\u5219\u4e0d\u518d\u66f4\u65b0 state */\n    if (unmountedRef.current) return;\n    setState(currentState);\n  }, []);\n\n  return [state, setCurrentState] as const;\n}\n\nexport default useSafeState;",m="import { useEffect, useRef } from 'react';\n\nconst useUnmountedRef = () => {\n  const unmountedRef = useRef(false);\n  useEffect(() => {\n    unmountedRef.current = false;\n\n    return () => {\n      unmountedRef.current = true;\n    };\n  }, []);\n  return unmountedRef;\n};\n\nexport default useUnmountedRef;",p="import React from 'react';\nimport { useSessionStorageState } from 'x-rhooks';\n\nexport default function () {\n  const [message, setMessage] = useSessionStorageState('user-message', 'Hello~');\n  return (\n    <>\n      <input\n        value={message}\n        onChange={(e) => {\n          setMessage(e.target.value);\n        }}\n        placeholder=\"Please enter some words...\"\n        style={{ width: 200, marginRight: 8 }}\n      />\n      <button\n        type=\"button\"\n        onClick={() => {\n          setMessage();\n        }}\n      >\n        Reset\n      </button>\n    </>\n  );\n}",f="import React from 'react';\nimport { useSessionStorageState } from 'x-rhooks';\n\nconst defaultArray = ['a', 'e', 'i', 'o', 'u'];\n\nexport default function () {\n  const [value, setValue] = useSessionStorageState('cascader', defaultArray);\n\n  return (\n    <>\n      <p>{value.join('-')}</p>\n      <button\n        type=\"button\"\n        style={{ marginRight: 8 }}\n        onClick={() => setValue([...value, Math.random().toString(36).slice(-1)])}\n      >\n        push random\n      </button>\n      <button type=\"button\" onClick={() => setValue(defaultArray)}>\n        reset\n      </button>\n    </>\n  );\n}",S="import React from 'react';\nimport { useSessionStorageState } from 'x-rhooks';\n\ninterface IUser {\n  id: number;\n  name: string;\n  age: number;\n}\n\nexport default function () {\n  const [user, setUser] = useSessionStorageState('user', {\n    id: 9234634791,\n    name: 'Zhangsan',\n    age: 33,\n  } as IUser);\n\n  return (\n    <>\n      <input\n        style={{ width: 200 }}\n        defaultValue={user.name}\n        placeholder=\"input user name\"\n        onChange={(e) => {\n          setUser((u: IUser) => ({ ...u, name: e.target.value }));\n        }}\n      />\n    </>\n  );\n}",h="import React from 'react';\nimport { useSetState } from 'x-rhooks';\n\ninterface State {\n  hello: string;\n  count: number;\n  [key: string]: any;\n}\n\nexport default () => {\n  const [state, setState] = useSetState<State>({\n    hello: '',\n    count: 0,\n  });\n\n  return (\n    <div>\n      <pre>{JSON.stringify(state, null, 2)}</pre>\n      <p>\n        <button type=\"button\" onClick={() => setState({ hello: 'world' })}>\n          set hello\n        </button>\n        <button type=\"button\" onClick={() => setState({ foo: 'bar' })} style={{ margin: '0 8px' }}>\n          set foo\n        </button>\n        <button type=\"button\" onClick={() => setState((prev) => ({ count: prev.count + 1 }))}>\n          count + 1\n        </button>\n      </p>\n    </div>\n  );\n};",v="import React, { useState } from 'react';\nimport { useUnmountedRef } from 'x-rhooks';\n\nconst Button = ({ setVisible }) => {\n  const unmountRef = useUnmountedRef();\n  const [text, setText] = useState('I am mounted');\n  const handleClick = async () => {\n    await setVisible();\n    !unmountRef.current && setText('I am unmounted');\n  };\n  return <button onClick={handleClick}>{text}</button>;\n};\n\nexport default () => {\n  const [visible, setVisible] = useState(true);\n  return (\n    <div>\n      click the button to unmount it\n      <br />\n      {visible ? <Button setVisible={() => setVisible(false)} /> : 'nothing'}\n    </div>\n  );\n};",g="import React from 'react';\nimport { useUrlState } from 'x-rhooks';\n\nexport default () => {\n  const [state, setState] = useUrlState({ count: '1' });\n\n  return (\n    <>\n      <button\n        style={{ marginRight: 8 }}\n        type=\"button\"\n        onClick={() => setState({ count: Number(state.count || 0) + 1 })}\n      >\n        add\n      </button>\n      <button type=\"button\" onClick={() => setState({ count: undefined })}>\n        clear\n      </button>\n      <div>state: {state?.count}</div>\n    </>\n  );\n};",b="import React from 'react';\nimport { useUrlState } from 'x-rhooks';\n\nexport default () => {\n  const [state, setState] = useUrlState(\n    { page: '1', pageSize: '10' },\n    {\n      navigateMode: 'push',\n    },\n  );\n\n  return (\n    <>\n      <div>\n        page: {state.page}\n        <span style={{ paddingLeft: 8 }}>\n          <button\n            onClick={() => {\n              setState((s) => ({ page: Number(s.page) + 1 }));\n            }}\n          >\n            +\n          </button>\n          <button\n            onClick={() => {\n              setState((s) => ({ page: Number(s.page) - 1 }));\n            }}\n            style={{ margin: '0 8px' }}\n          >\n            -\n          </button>\n          <button\n            onClick={() => {\n              setState({ page: 1 });\n            }}\n          >\n            reset\n          </button>\n        </span>\n      </div>\n      <br />\n      <div>\n        pageSize: {state.pageSize}\n        <span style={{ paddingLeft: 8 }}>\n          <button\n            onClick={() => {\n              setState((s) => ({ pageSize: Number(s.pageSize) + 1 }));\n            }}\n          >\n            +\n          </button>\n          <button\n            onClick={() => {\n              setState((s) => ({ pageSize: Number(s.pageSize) - 1 }));\n            }}\n            style={{ margin: '0 8px' }}\n          >\n            -\n          </button>\n          <button\n            onClick={() => {\n              setState({ pageSize: 10 });\n            }}\n          >\n            reset\n          </button>\n        </span>\n      </div>\n    </>\n  );\n};",x="import React, { useState } from 'react';\nimport { useMountState } from 'x-rhooks';\n\nexport default () => {\n  const { state, loading, error, setState, refresh } = useMountState(0, async (set) => {\n    const data = await queryCount();\n    set(data);\n  });\n\n  if (error) return 'error';\n  if (loading) return 'loading...';\n  return (\n    <>\n      <h4> count: {state}</h4>\n      <button onClick={() => setState((prev) => prev + 1)}>add age</button>\n      <button onClick={refresh}>refresh</button>\n    </>\n  );\n};\n\nfunction queryCount() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(18);\n    }, 1000);\n  });\n}",k={"uselocalstoragestate-demo1":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,232))).default}),previewerProps:{sources:{_:{tsx:s}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},title:"Persist state into localStorage","title.zh-CN":"\u5c06 state \u6301\u4e45\u5316\u5728 localStorage \u4e2d",description:'<div class="markdown"><p>Refresh this page and you will find the value of input box get restored from localStorage.</p></div>',"description.zh-CN":'<div class="markdown"><p>\u5237\u65b0\u9875\u9762\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u8f93\u5165\u6846\u4e2d\u7684\u5185\u5bb9\u88ab\u4ece localStorage \u4e2d\u6062\u590d\u4e86\u3002</p></div>',identifier:"uselocalstoragestate-demo1"}},"uselocalstoragestate-demo2":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,7612))).default}),previewerProps:{sources:{_:{tsx:a}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},title:"Store complex types such as arrays or objects","title.zh-CN":"\u5b58\u50a8\u6570\u7ec4\u6216\u5bf9\u8c61\u7b49\u590d\u6742\u7c7b\u578b",description:'<div class="markdown"><p>useLocalStorageState will do the serialization and deserialization work automatically.</p></div>',"description.zh-CN":'<div class="markdown"><p>useLocalStorageState \u4f1a\u81ea\u52a8\u5904\u7406\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u64cd\u4f5c\u3002</p></div>',identifier:"uselocalstoragestate-demo2"}},"uselocalstoragestate-demo3":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,410))).default}),previewerProps:{sources:{_:{tsx:r}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},title:"Persist objects with function updater","title.zh-CN":"\u4f7f\u7528 function updater \u5b58\u50a8",description:'<div class="markdown"><p>function updater is also acceptable with useLocalStorageState.</p></div>',"description.zh-CN":'<div class="markdown"><p>useLocalStorageState \u91cc\u4e5f\u53ef\u4ee5\u7528 function updater\uff0c\u5c31\u50cf useState \u90a3\u6837\u3002</p></div>',identifier:"uselocalstoragestate-demo3"}},"usemodal-demo1":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,7355))).default}),previewerProps:{sources:{_:{tsx:i}},dependencies:{antd:{version:"4.16.10",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-dom":{version:">=16.9.0"},"react-router":{version:"^5.0.0"}},title:"Default usage","title.zh-CN":"\u57fa\u7840\u7528\u6cd5",identifier:"usemodal-demo1"}},"usemodal-demo2":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,4718))).default}),previewerProps:{sources:{_:{tsx:u}},dependencies:{antd:{version:"4.16.10",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-dom":{version:">=16.9.0"},"react-router":{version:"^5.0.0"}},identifier:"usemodal-demo2"}},"usemountstate-demo1":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,6421))).default}),previewerProps:{sources:{_:{tsx:d}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},title:"Default usage","title.zh-CN":"\u57fa\u7840\u7528\u6cd5",identifier:"usemountstate-demo1"}},"usesafestate-demo1":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,6259))).default}),previewerProps:{sources:{_:{tsx:l},"index.ts":{import:"../index",content:c},"useUnmountedRef/index.ts":{import:"../useUnmountedRef",content:m}},dependencies:{react:{version:"16.14.0"}},title:"Default usage","title.zh-CN":"\u57fa\u7840\u7528\u6cd5",identifier:"usesafestate-demo1"}},"usesessionstoragestate-demo1":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,2189))).default}),previewerProps:{sources:{_:{tsx:p}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},title:"Persist state into sessionStorage","title.zh-CN":"\u5c06 state \u6301\u4e45\u5316\u5728 sessionStorage \u4e2d",description:'<div class="markdown"><p>Refresh this page and you will find the value of input box get restored from sessionStorage.</p></div>',"description.zh-CN":'<div class="markdown"><p>\u5237\u65b0\u9875\u9762\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u8f93\u5165\u6846\u4e2d\u7684\u5185\u5bb9\u88ab\u4ece sessionStorage \u4e2d\u6062\u590d\u4e86\u3002</p></div>',identifier:"usesessionstoragestate-demo1"}},"usesessionstoragestate-demo2":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,8106))).default}),previewerProps:{sources:{_:{tsx:f}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},title:"Persist objects","title.zh-CN":"\u5b58\u50a8\u5bf9\u8c61",description:'<div class="markdown"><p>useSessionStorageState will do the serialization and deserialization work automatically.</p></div>',"description.zh-CN":'<div class="markdown"><p>useSessionStorageState \u4f1a\u81ea\u52a8\u5904\u7406\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u64cd\u4f5c\u3002</p></div>',identifier:"usesessionstoragestate-demo2"}},"usesessionstoragestate-demo3":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,6197))).default}),previewerProps:{sources:{_:{tsx:S}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},title:"Persist objects with function updater","title.zh-CN":"\u4f7f\u7528 function updater \u5b58\u50a8",description:'<div class="markdown"><p>function updater is also acceptable with useSessionStorageState.</p></div>',"description.zh-CN":'<div class="markdown"><p>useSessionStorageState \u91cc\u4e5f\u53ef\u4ee5\u7528 function updater\uff0c\u5c31\u50cf useState \u90a3\u6837\u3002</p></div>',identifier:"usesessionstoragestate-demo3"}},"usesetstate-demo1":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,7841))).default}),previewerProps:{sources:{_:{tsx:h}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},title:"Default usage","title.zh-CN":"\u57fa\u7840\u7528\u6cd5",identifier:"usesetstate-demo1"}},"useunmountedref-demo1":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,7602))).default}),previewerProps:{sources:{_:{tsx:v}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},title:"Default usage","title.zh-CN":"\u57fa\u7840\u7528\u6cd5",description:"<div class=\"markdown\"><p>The function is called when the component is first rendered, and the returned object has a property named 'current' which indicates whether the current component has been unmounted</p></div>","description.zh-CN":'<div class="markdown"><p>\u5728\u7ec4\u4ef6\u9996\u6b21\u6e32\u67d3\u65f6\u6267\u884c\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u542b\u6709current\u5c5e\u6027\u7684ref\u5bf9\u8c61\uff0ccurrent\u8868\u793a\u5f53\u524d\u7ec4\u4ef6\u662f\u5426\u5df2\u88ab\u5378\u8f7d</p></div>',identifier:"useunmountedref-demo1"}},"useurlstate-demo1":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,1926))).default}),previewerProps:{sources:{_:{tsx:g}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},title:"Default usage","title.zh-CN":"\u57fa\u7840\u7528\u6cd5",hideActions:["CSB"],description:'<div class="markdown"><p>store the state into url query parameter</p></div>',"description.zh-CN":'<div class="markdown"><p>\u5c06\u72b6\u6001\u540c\u6b65\u5230 url query \u4e2d</p></div>',identifier:"useurlstate-demo1"}},"useurlstate-demo2":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,4317))).default}),previewerProps:{sources:{_:{tsx:b}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},title:"Multi-state management","title.zh-CN":"\u591a\u72b6\u6001\u7ba1\u7406",hideActions:["CSB"],description:'<div class="markdown"><p>useUrlState can manage multiple states at the same time</p></div>',"description.zh-CN":'<div class="markdown"><p>useUrlState \u53ef\u4ee5\u540c\u65f6\u7ba1\u7406\u591a\u4e2a\u72b6\u6001</p></div>',identifier:"useurlstate-demo2"}},"docs-demo1":{component:(0,o.dynamic)({loader:async()=>(await Promise.all([n.e(466),n.e(685),n.e(50)]).then(n.bind(n,7101))).default}),previewerProps:{sources:{_:{tsx:x}},dependencies:{react:{version:"^16.8.6 || ^17.0"},"x-rhooks":{version:"1.0.0"},"react-router":{version:"^5.0.0"}},identifier:"docs-demo1"}}}}}]);