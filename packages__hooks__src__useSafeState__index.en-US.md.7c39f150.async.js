(self["webpackChunkx_rhooks"]=self["webpackChunkx_rhooks"]||[]).push([[279],{3602:function(e,t,a){"use strict";a.d(t,{m:function(){return n.m}});var n=a(7624);a(3142)},5936:function(e,t,a){"use strict";a.r(t);var n=a(7294),s=a(6924),c=a(2221),l=a(6148),o=a(8090);const r=n.memo(o.default["usesafestate-demo1"].component);t["default"]=e=>(n.useEffect((()=>{var t;null!==e&&void 0!==e&&null!==(t=e.location)&&void 0!==t&&t.hash&&s.AnchorLink.scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),n.createElement(n.Fragment,null,n.createElement(n.Fragment,null,n.createElement("div",{className:"markdown"},n.createElement("h1",{id:"usesafestate"},n.createElement(s.AnchorLink,{to:"#usesafestate","aria-hidden":"true",tabIndex:-1},n.createElement("span",{className:"icon icon-link"})),"useSafeState"),n.createElement("p",null,"It is exactly the same with React.useState , but after the component is unloaded, the setstate in the asynchronous callback is no longer executed to avoid memory leakage caused by updating the state after the component is unloaded"),n.createElement("h2",{id:"examples"},n.createElement(s.AnchorLink,{to:"#examples","aria-hidden":"true",tabIndex:-1},n.createElement("span",{className:"icon icon-link"})),"Examples")),n.createElement(c.default,o.default["usesafestate-demo1"].previewerProps,n.createElement(r,null)),n.createElement("div",{className:"markdown"},n.createElement("h2",{id:"api"},n.createElement(s.AnchorLink,{to:"#api","aria-hidden":"true",tabIndex:-1},n.createElement("span",{className:"icon icon-link"})),"API"),n.createElement(l.Z,{code:"const [state, setState] = useSafeState(initialState);",lang:"typescript"})))))}}]);